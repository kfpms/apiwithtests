name: Run Integration Tests (Ubuntu built-in Postgres)

on:
  # Auto-run after your Windows CI completes successfully
  workflow_run:
    workflows: ["HundredX Continuous Integration"]
    types: [completed]
  # Allow manual runs too
  workflow_dispatch:

jobs:
  integration-tests:
    if: github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-24.04

    env:
      # App/test connection
      ConnectionStrings__Default: Host=localhost;Port=5432;Database=hundredx;Username=postgres;Password=postgres;Pooling=true
      # psql convenience
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: hundredx
      PGPORT: 5432

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      # If triggered by CI, pull your SQL scripts artifact for seeding
      - name: Download SQLScripts artifact (from CI run)
        if: github.event_name == 'workflow_run'
        uses: actions/download-artifact@v4
        with:
          name: SQL
          path: SQLScripts
          run-id: ${{ github.event.workflow_run.id }}

      - name: Ensure psql client is present
        run: |
          sudo apt-get update -y
          sudo apt-get install -y postgresql-client

      - name: Start built-in PostgreSQL and prepare DB
        run: |
          # Start the preinstalled Postgres service
          sudo systemctl start postgresql

          # Wait for server readiness
          for i in $(seq 1 60); do
            pg_isready -h localhost -p 5432 && break
            sleep 1
          done

          # Set a password for the 'postgres' role so TCP auth works over localhost
          sudo -u postgres psql -c "ALTER USER postgres WITH PASSWORD 'postgres';"

          # Create the hundredx database (idempotent)
          sudo -u postgres psql -d postgres -c "SELECT 1 FROM pg_database WHERE datname='hundredx';" | grep -q 1 \
            || sudo -u postgres createdb hundredx

      - name: Seed database (if init.sql exists)
        run: |
          if [ -f "SQLScripts/init.sql" ]; then
            PGPASSWORD="$PGPASSWORD" psql -h localhost -U "$PGUSER" -d "$PGDATABASE" -f SQLScripts/init.sql
          else
            echo "No SQLScripts/init.sql found; skipping seed."
          fi

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore
        run: dotnet restore

      - name: Build (Release)
        run: dotnet build HundredX.sln -c Release --no-restore

      - name: Run Integration Tests
        run: >
          dotnet test "HundredX.API.IntegrationTests/HundredX.API.IntegrationTests.csproj"
          -c Release
          --no-build
          --logger "trx;LogFileName=TestResults.trx"
          --results-directory bin/TestResults

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: TestResults
          path: bin/TestResults
